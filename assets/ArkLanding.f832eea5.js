import{u as q,Q as h,B as f,a as x,D,b as L,T as Q,c as R,d as W}from"./QCheckbox.22da7e81.js";import{_ as P,L as $,N as c,O as k,R as b,U as i,W as n,aa as e,ab as I,ac as N,r as g,X as y,ad as A,a as T,ae as S,Y as C,o as H,V as j,af as z,T as Y}from"./index.0824776f.js";import{d as F,e as O}from"./useMetaMask.d4dd6db5.js";import"./axios.f7c62829.js";const U=o=>(I("data-v-3bf0fc0f"),o=o(),N(),o),X=U(()=>e("span",{class:"title"},"2. Add Personal Credentials",-1)),G=U(()=>e("span",null,"These details can be verified directly e.g. phone number via OTP.",-1)),J={class:"column flex-center q-mt-md"},K=$({__name:"AddCredentials",setup(o){const s=q();return(t,a)=>(c(),k(x,{class:"home-card"},{default:b(()=>[X,G,i(h,{type:"email",modelValue:n(s).user.email,"onUpdate:modelValue":a[0]||(a[0]=l=>n(s).user.email=l),label:"Email",rules:[l=>l.includes("@")||"Enter a valid email address"]},null,8,["modelValue","rules"]),i(h,{type:"tel",modelValue:n(s).user.phoneNumber,"onUpdate:modelValue":a[1]||(a[1]=l=>n(s).user.phoneNumber=l),label:"Phone Number"},null,8,["modelValue"]),e("div",J,[i(f,{label:"Add personal credentials",class:"q-px-lg q-py-sm q-mb-sm",onClick:a[2]||(a[2]=l=>t.$emit("next"))}),i(f,{type:"flat",label:"Skip",onSkip:a[3]||(a[3]=l=>t.$emit("next"))})])]),_:1}))}});var Z=P(K,[["__scopeId","data-v-3bf0fc0f"]]);const V=o=>(I("data-v-1ce914a2"),o=o(),N(),o),ee=V(()=>e("span",{class:"title text-bold"},"Congratulations, you are done!",-1)),se=V(()=>e("span",{class:"text-center q-mb-lg"},"Thanks for verifying your identity.",-1)),te={class:"column flex-center"},ae=V(()=>e("span",{class:"title q-mt-lg"},"1.Verify Details",-1)),le={key:0},ne={key:1},oe={class:"column flex-center q-mt-md"},re=$({__name:"AddIdentity",setup(o){const s=g(0),t=q(),a=l=>{typeof l=="string"&&(t.user.dateOfBirth=D.fromFormat(l,"yyyy-MM-dd"))};return(l,r)=>(c(),k(x,{class:"home-card"},{default:b(()=>[s.value==2?(c(),y(A,{key:0},[ee,se,e("div",te,[i(f,{label:"Add personal credentials",class:"q-px-lg q-py-sm q-mb-sm",onClick:r[0]||(r[0]=d=>l.$emit("next")),disable:!n(t).user.name||!n(t).user.dateOfBirth||!n(t).user.passportNumber},null,8,["disable"]),i(f,{type:"flat",label:"Skip",onClick:r[1]||(r[1]=d=>l.$emit("skip",2))})])],64)):(c(),y(A,{key:1},[ae,s.value==0?(c(),y("span",le,"These are details that require a third-party issuer to verify its authenticity e.g. via photo of National IC.")):(c(),y("span",ne,"Confirm that your details are correct.")),i(h,{disable:s.value==1,modelValue:n(t).user.name,"onUpdate:modelValue":r[2]||(r[2]=d=>n(t).user.name=d),label:"Name"},null,8,["disable","modelValue"]),i(h,{disable:s.value==1,"model-value":n(t).user.dateOfBirth.toFormat("yyyy-MM-dd"),"onUpdate:modelValue":a,type:"date",label:"Date Of Birth"},null,8,["disable","model-value"]),i(h,{disable:s.value==1,modelValue:n(t).user.passportNumber,"onUpdate:modelValue":r[3]||(r[3]=d=>n(t).user.passportNumber=d),label:"Passport Number"},null,8,["disable","modelValue"]),e("div",oe,[i(f,{label:s.value==1?"Submit":"Continue",class:"q-px-lg q-py-sm q-mb-sm",onClick:r[4]||(r[4]=d=>s.value==1?s.value=2:s.value=1),disable:!n(t).user.name||!n(t).user.dateOfBirth||!n(t).user.passportNumber},null,8,["label","disable"]),i(f,{type:"flat",label:"Back",onClick:r[5]||(r[5]=d=>s.value==0?l.$emit("back"):s.value=0)})])],64))]),_:1}))}});var ie=P(re,[["__scopeId","data-v-1ce914a2"]]);const M=o=>(I("data-v-3a9b0cbc"),o=o(),N(),o),de=M(()=>e("span",{class:"title"},"3. Create MetaPass Passport",-1)),ue=M(()=>e("span",{class:"verified-card__title"},"MetaPass Credentials",-1)),ce={class:"column"},pe=M(()=>e("u",null,"Passport Details",-1)),me=M(()=>e("u",{class:"q-mt-sm"},"Personal Details",-1)),_e=M(()=>e("b",null,"Create Ark Passport",-1)),ve={class:"flex flex-center"},fe=$({__name:"CreatePassport",emits:["next"],setup(o,{emit:s}){const t=q(),a=g({original:t.user.password,confirm:""}),l=T(()=>a.value.original===a.value.confirm&&a.value.original.length>0),r=T(()=>[{label:"Name",value:t.user.name},{label:"Date Of Birth",value:t.user.dateOfBirth.toFormat("dd LLL yyyy")},{label:"Passport Number",value:t.user.passportNumber}]),d=T(()=>{var m,v;return[{label:"Email",value:(m=t.user.email)!=null?m:"N.A."},{label:"Phone Number",value:(v=t.user.phoneNumber)!=null?v:"N.A."}]}),p=()=>{t.user.password=a.value.original,s("next")};return(m,v)=>(c(),k(x,{class:"home-card"},{default:b(()=>[de,i(x,{class:"verified-card q-mb-md"},{default:b(()=>[ue,e("div",ce,[pe,(c(!0),y(A,null,S(n(r),u=>(c(),y("div",{key:u.label,class:"flex justify-between q-ml-sm"},[e("span",null,C(u.label)+":",1),e("span",null,C(u.value),1)]))),128)),me,(c(!0),y(A,null,S(n(d),u=>(c(),y("div",{key:u.label,class:"flex justify-between q-ml-sm"},[e("span",null,C(u.label)+":",1),e("span",null,C(u.value),1)]))),128))])]),_:1}),_e,i(h,{modelValue:a.value.original,"onUpdate:modelValue":v[0]||(v[0]=u=>a.value.original=u),type:"password",label:"Password",rules:[u=>!!u||"Field is required"]},null,8,["modelValue","rules"]),i(h,{modelValue:a.value.confirm,"onUpdate:modelValue":v[1]||(v[1]=u=>a.value.confirm=u),type:"password",label:"Confirm Password",rules:[u=>!!u||"Field is required",()=>n(l)||"Passwords do not match"]},null,8,["modelValue","rules"]),e("span",ve,[i(f,{label:"Create Passport",disable:!n(l),onClick:p},null,8,["disable"])])]),_:1}))}});var ye=P(fe,[["__scopeId","data-v-3a9b0cbc"]]);const B=o=>(I("data-v-02c0bfc8"),o=o(),N(),o),be={key:0,class:"column text-center"},he=B(()=>e("b",{style:{"font-size":"36px"}},"Transaction successfully submitted.",-1)),ke=["href"],ge={class:"flex flex-center"},xe={key:1,class:"column"},$e=B(()=>e("span",{class:"title"},"Final: Mint MetaPass Token",-1)),Ce=B(()=>e("p",{class:"q-mt-lg"}," The MetaPass Identity Token is a non-tradeable, non-fungible token used to map your off-chain credentials to your on-chain identity. Be sure that the following wallet address is the correct wallet you wish to connect your credentials to. ",-1)),qe={class:"flex flex-center"},Pe={class:"text-center address-container"},Me={class:"flex flex-center q-mt-lg"},we=$({__name:"MintToken",emits:["next","reset"],setup(o){const{walletAddress:s}=F(),{mintArk:t,getTokenId:a,checkArkToken:l,isBounded:r}=L(),d=q(),p=O(),m=g(!1),v=g(!1),u=g({}.ETHERSCAN_API),E=async()=>{try{m.value=!0;const _=await t(),w=await a(Q.Ark);await d.submitUserDetails(d.user,s.value,w),u.value={}.ETHERSCAN_API+"tx/"+_,v.value=!0}catch(_){_.code===-32e3||_.code===-32603?p.notify({message:"Address already has token!",type:"negative"}):_.code===4001?p.notify({message:"Mint transaction denied by user",type:"negative"}):(console.error(_),p.notify({message:"Failed to mint token, try again later",type:"negative"}))}finally{m.value=!1}};return H(async()=>{m.value=!0;try{const _=await Promise.all([l(),r(s.value)]);_.includes(!0)?p.notify({message:_[0]?"Address has been bounded to existing Nexus token":"Address already has token!",type:"negative",progress:!0,timeout:1e4}):m.value=!1}catch(_){console.error(_),p.notify({message:"Failed to validate wallet address",type:"negative"})}}),(_,w)=>(c(),k(x,{class:"card"},{default:b(()=>[v.value?(c(),y("div",be,[he,e("span",null,[j("You may view details at "),e("a",{href:u.value,class:"text-center q-mt-lg"},"etherscan.io",8,ke)]),e("span",ge,[i(f,{label:"Mint Another Identity",onClick:w[0]||(w[0]=Fe=>_.$emit("reset")),class:"q-px-lg q-py-sm q-mt-lg",disable:m.value},null,8,["disable"])])])):(c(),y("div",xe,[$e,Ce,e("div",qe,[e("span",Pe,C(n(s)),1)]),e("div",Me,[i(f,{label:"Mint Identity Token",class:"q-px-lg q-py-sm q-mb-sm",onClick:E,disable:m.value},null,8,["disable"])])]))]),_:1}))}});var Ae=P(we,[["__scopeId","data-v-02c0bfc8"]]);const Ie=e("h2",null,"Metapass Ark",-1),Ne=e("b",{style:{"font-size":"20px"}},"3 steps to create your MetaPass Identity",-1),Te=e("ol",{class:"q-mb-xl"},[e("li",null,"Connect Wallet"),e("li",null,"Verify Identity"),e("li",null,"Create MetaPass Passport"),e("li",null,"Mint MetaPass Ark Identity Token")],-1),Ve={class:"flex flex-center"},Be=$({__name:"LoginCard",emits:["next"],setup(o,{emit:s}){const t=O(),{hasMetaMask:a,connectWallet:l}=F(),r=async()=>{try{await l(),s("next")}catch{t.notify({type:"negative",message:"Failed to connect to MetaMask"})}};return(d,p)=>(c(),k(x,{class:"home-card"},{default:b(()=>[Ie,Ne,Te,e("span",Ve,[i(f,{label:"Create Identity",class:"q-px-lg q-py-sm",disable:!n(a),onClick:r},null,8,["disable"])]),i(R,{class:"q-mt-lg","model-value":n(a),disable:"","checked-icon":"task_alt","unchecked-icon":"highlight_off",label:"MetaMask Extension Found"},null,8,["model-value"])]),_:1}))}});const Se=$({__name:"ArkLanding",setup(o){const s=g(0),t=q();t.user={name:"",dateOfBirth:D.now(),passportNumber:"",password:""};const a=[Be,ie,Z,ye,Ae],l=(d=1)=>{s.value<a.length-1&&(s.value+=d)},r=(d=1)=>{s.value>0&&(s.value-=d)};return(d,p)=>(c(),k(W,{padding:"",class:"flex flex-center"},{default:b(()=>[i(Y,{name:"fade",mode:"out-in"},{default:b(()=>[(c(),k(z(a[s.value]),{onNext:l,onBack:r,onSkip:p[0]||(p[0]=m=>l(m)),onReset:p[1]||(p[1]=m=>s.value=0)},null,32))]),_:1})]),_:1}))}});var Qe=P(Se,[["__scopeId","data-v-356f44a2"]]);export{Qe as default};
